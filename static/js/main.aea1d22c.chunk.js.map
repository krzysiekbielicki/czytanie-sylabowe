{"version":3,"sources":["components/Editable.js","components/Word.js","hyphenate.js","App.js","reportWebVitals.js","index.js"],"names":["Editable","text","editComponent","displayComponent","useState","isEditing","setEditing","value","setValue","handleChange","event","target","Card","CardHeader","action","IconButton","onClick","className","onChange","Syllabe","color","printable","replace","style","Word","syllabes","split","console","log","map","it","i","Hyphenated","hyphenateSync","hyphenChar","minWordLength","hyphenatedWords","TextArea","TextField","multiline","fullWidth","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4RAIO,SAASA,EAAT,GAA4D,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,cAAeC,EAAmB,EAAnBA,iBAE3C,EAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0BF,mBAASH,GAAnC,mBAAOM,EAAP,KAAcC,EAAd,KAEA,SAASC,EAAaC,GAClBF,EAASE,EAAMC,OAAOJ,OAe1B,OACI,eAACK,EAAA,EAAD,WACA,cAACC,EAAA,EAAD,CAAYC,OAAQ,cAACC,EAAA,EAAD,CAAYC,QAdpC,WACIV,GAAYD,IAaQ,SAAiC,cAAC,IAAD,MAA2BY,UAAU,aATtFZ,EACOH,EAAc,CAACD,KAAMM,EAAOW,SAAUT,IAEtCN,EAAiB,CAACF,KAAMM,O,YCnB3C,SAASY,EAAT,GAAiC,IAAflB,EAAc,EAAdA,KAAMmB,EAAQ,EAARA,MAEdC,EAAYpB,EAAKqB,QAAQ,kBAAmB,UAElD,OACI,sBAAMC,MAAO,CAACH,MAAOA,GAArB,SAA8BC,IAI/B,SAASG,EAAT,GAAuB,IAEpBC,EAFmB,EAAPxB,KAEIyB,MAAM,KAG5B,OAFAC,QAAQC,IAAIH,GAGR,iCACKA,EAASI,KAAK,SAACC,EAAIC,GAChB,OAAQ,cAACZ,EAAD,CAASlB,KAAM6B,EAAIV,MAAOW,EAAE,IAAM,EAAI,QAAU,WACxD,OChBT,SAASC,EAAT,GAA6B,IAAR/B,EAAO,EAAPA,KAExB,OADwBgC,wBAAchC,EAAM,CAACiC,WAAY,IAAKC,cAAe,IAAIT,MAAM,MAChEG,KAAK,SAAAC,GACxB,IAAMM,EAAkBN,EAAGJ,MAAM,KACjC,OACI,eAAC,WAAD,WACEU,EAAgBP,KAAK,SAAAC,GAAE,OAAK,cAACN,EAAD,CAAMvB,KAAM6B,OAC1C,6B,aCNZ,SAASO,EAAT,GAAqC,IAAlBpC,EAAiB,EAAjBA,KAAMiB,EAAW,EAAXA,SAEvB,OADAS,QAAQC,IAAIV,GAEV,cAACoB,EAAA,EAAD,CAAW/B,MAAON,EAAMiB,SAAUA,EAAUqB,WAAW,EAAMC,WAAW,IAiC7DC,MA7Bf,WACE,OACE,qBAAKxB,UAAU,MAAf,SACE,cAACjB,EAAD,CAAUC,KAAI,wxEAmBlBC,cAAemC,EACflC,iBAAkB6B,OCvBLU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.aea1d22c.chunk.js","sourcesContent":["import { useState } from 'react';\nimport { Card, CardHeader, IconButton } from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\n\nexport function Editable({text, editComponent, displayComponent}) {\n    \n    const [isEditing, setEditing] = useState(false);\n    const [value, setValue] = useState(text);\n\n    function handleChange(event) {\n        setValue(event.target.value);\n    }\n\n    function toggleEdit() {\n        setEditing(!isEditing);\n    }\n\n    function renderComponent() {\n        if (isEditing) {\n            return editComponent({text: value, onChange: handleChange})\n        } else {\n            return displayComponent({text: value})\n        }\n    }\n\n    return (\n        <Card>\n        <CardHeader action={<IconButton onClick={toggleEdit}><EditIcon/></IconButton> } className=\"no-print\"/>\n        {renderComponent()}\n        </Card>\n    )\n}\n","import * as React from 'react'\n\nfunction Syllabe({text, color}) {\n\n    const printable = text.replace(/(?:\\r\\n|\\r|\\n)/g, '<br />')\n\n    return (\n        <span style={{color: color}}>{printable}</span>\n    )\n}\n\nexport function Word({text}) {\n\n    const syllabes = text.split(\"@\")\n    console.log(syllabes);\n    \n    return (\n        <span>\n            {syllabes.map( (it, i) => {\n                return (<Syllabe text={it} color={i%2 === 0 ? \"black\" : \"red\"}/>)\n            })}{' '}\n        </span>\n    )\n\n}","import { hyphenateSync } from 'hyphen/pl'\nimport { Word } from './components/Word'\nimport { Fragment } from 'react';\n\nexport function Hyphenated({text}) {\n    const hyphenatedLines = hyphenateSync(text, {hyphenChar: \"@\", minWordLength: 3}).split(\"\\n\");\n    return hyphenatedLines.map (it => {\n        const hyphenatedWords = it.split(\" \");\n        return (\n            <Fragment>\n            { hyphenatedWords.map( it => (<Word text={it} />)) }\n            <br/>\n            </Fragment>\n        );\n    });\n}\n","import './App.css';\nimport { Editable } from './components/Editable'\nimport { Hyphenated } from './hyphenate';\nimport TextField from '@material-ui/core/TextField';\n\nfunction TextArea({text, onChange}) {\n  console.log(onChange);\n  return (\n    <TextField value={text} onChange={onChange} multiline={true} fullWidth={true} />\n  )\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Editable text={`Nazywam się Lisa. Jestem dziewczynką, to chyba od razu widać z imienia. Mam siedem lat i wkrótce skończę osiem. Czasem mama mówi:\n\n– Jesteś dużą córeczką mamy, możesz więc chyba dzisiaj wytrzeć naczynia...\n\nCzasem zaś Lasse i Bosse mówią:\n\n– Takie brzdące nie mogą się z nami bawić w Indian. Jesteś za mała!\n\nDlatego też zastanawiam się, czy właściwie jestem mała, czy duża. Jeśli jedni uważają, że jestem duża, a drudzy, że jestem mała, to pewno jestem w sam raz.\n\nLasse i Bosse to moi bracia. Lasse ma dziewięć lat, a Bosse osiem. Lasse jest bardzo silny i umie biegać o wiele szybciej ode mnie. Lecz ja umiem biegać tak szybko jak Bosse. Czasem, gdy chłopcy nie chcą, żebym szła z nimi, Lasse przytrzymuje mnie przez chwilę, gdy tymczasem Bosse biegnie naprzód. Potem Lasse puszcza mnie i leci jak strzała.\n\nSiostry nie mam. To wielka szkoda. Chłopcy są tacy nieznośni! Mieszkamy w zagrodzie, która nazywa się Środkowa. Nazywa się tak dlatego, że leży pomiędzy dwiema innymi. Tamte zagrody nazywają się Północna i Południowa. Wszystkie trzy położone są obok siebie. Jak na rysunku.\n\nTo niezupełnie tak wygląda w rzeczywistości, ale to dlatego, że nie umiem zbyt dobrze rysować.\n\nW Zagrodzie Południowej mieszka chłopiec, który ma na imię Olle. On nie ma wcale rodzeństwa. Lecz bawi się z Lassem i Bossem. Ma osiem lat i też bardzo prędko biega. Natomiast w Zagrodzie Północnej mieszkają dziewczynki. Dwie. Co za szczęście, że i one nie są chłopcami! Nazywają się Britta i Anna. Britta ma dziewięć lat, a Anna tyle co ja. Obie lubię jednakowo. Może tylko trochę bardziej Annę.\n\nWięcej dzieci nie ma już w Bullerbyn. Tak się nazywa ta wioska. Jest to bardzo mała wioska, tylko trzy zagrody: Północna, Środkowa i Południowa. I tylko sześcioro dzieci: Lasse i Bosse, i ja, i Olle, i Britta, i Anna.`}\n  editComponent={TextArea}\n  displayComponent={Hyphenated}\n/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}